{"ast":null,"code":"var _jsxFileName = \"/Users/prashanthdevarapalli/my-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport { signInToFirebase } from './firebaseConfig';\n\n// Import Page Components\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport AdvertisementPlanPage from './pages/AdvertisementPlanPage';\nimport CheckoutPage from './pages/CheckoutPage';\nimport OrderSuccessPage from './pages/OrderSuccessPage';\nimport OrderHistoryPage from './pages/OrderHistoryPage';\nimport MarketplacePage from './pages/MarketplacePage';\nimport InboxPage from './pages/InboxPage';\nimport ChatPage from './pages/ChatPage';\n\n// --- IMPORTANT: PASTE YOUR KEYS HERE ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_CLIENT_ID = \"117194583119-ipg9t7ohp034hfapg6h0s3ohja0ajdbj.apps.googleusercontent.com\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('home');\n  const [pageData, setPageData] = useState({});\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [cart, setCart] = useState([]);\n  const [isCartAnimating, setIsCartAnimating] = useState(false);\n\n  // --- EFFECT 1: Handle redirects from Stripe ---\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.get('payment_intent')) {\n      setCurrentPage('order-success');\n    }\n  }, []);\n\n  // --- EFFECT 2: Bootstrap user session on load ---\n  const handleLogout = useCallback(() => {\n    setUser(null);\n    setToken(null);\n    setCart([]);\n    localStorage.removeItem('token');\n    localStorage.removeItem('firebaseToken');\n    setCurrentPage('home');\n  }, []);\n  useEffect(() => {\n    const bootstrap = async () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        try {\n          const decodedToken = JSON.parse(atob(storedToken.split('.')[1]));\n          if (decodedToken.exp * 1000 < Date.now()) {\n            handleLogout();\n            return;\n          }\n          setUser({\n            id: decodedToken.id,\n            name: decodedToken.name\n          });\n          setToken(storedToken);\n          const firebaseToken = localStorage.getItem('firebaseToken');\n          if (firebaseToken) {\n            await signInToFirebase(firebaseToken);\n          }\n          const response = await fetch('http://localhost:8000/api/cart', {\n            headers: {\n              'Authorization': `Bearer ${storedToken}`\n            }\n          });\n          if (response.ok) {\n            const cartData = await response.json();\n            const formattedCart = cartData.map(item => ({\n              ...item,\n              name: item.productName\n            }));\n            setCart(formattedCart);\n          } else {\n            if (response.status === 401 || response.status === 403) {\n              handleLogout();\n            }\n          }\n        } catch (error) {\n          console.error(\"Failed to initialize app state:\", error);\n          handleLogout();\n        }\n      }\n    };\n    bootstrap();\n  }, [handleLogout]);\n  const handleNavigation = useCallback((page, data = {}) => {\n    setPageData(data);\n    setCurrentPage(page);\n  }, []);\n\n  // --- UPDATED LOGIN HANDLER WITH TIMEOUT ---\n  const handleLogin = useCallback(async googleUserInfo => {\n    try {\n      // Create a timeout promise\n      const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Server did not respond in time.')), 15000) // 15 seconds\n      );\n\n      // Race the fetch request against the timeout\n      const response = await Promise.race([fetch('http://localhost:8000/api/auth/google', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          googleId: googleUserInfo.sub,\n          email: googleUserInfo.email,\n          name: googleUserInfo.name\n        })\n      }), timeoutPromise]);\n      if (!response.ok) throw new Error('Backend authentication failed');\n      const data = await response.json();\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('firebaseToken', data.firebaseToken);\n      setUser(data.user);\n      setToken(data.token);\n      await signInToFirebase(data.firebaseToken);\n      setCurrentPage('home');\n    } catch (error) {\n      console.error(\"Error during backend authentication:\", error);\n      // We can pass an error message to the login page in the future if we want.\n      // For now, the loading spinner on the login page will just stop.\n    }\n  }, []);\n  const triggerCartAnimation = useCallback(() => {\n    setIsCartAnimating(true);\n    setTimeout(() => setIsCartAnimating(false), 820);\n  }, []);\n  const handleAddToCart = useCallback(async itemsToAdd => {\n    if (!token) {\n      handleNavigation('login');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/api/cart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          itemsToAdd\n        })\n      });\n      if (!response.ok) throw new Error('Failed to add to cart');\n      const updatedCartData = await response.json();\n      const formattedCart = updatedCartData.map(item => ({\n        ...item,\n        name: item.productName\n      }));\n      setCart(formattedCart);\n      triggerCartAnimation();\n    } catch (error) {\n      console.error(\"Error adding to cart:\", error);\n    }\n  }, [token, handleNavigation, triggerCartAnimation]);\n  const handleUpdateCart = useCallback(async (itemName, newQuantity) => {\n    if (!token) return;\n    try {\n      await fetch(`http://localhost:8000/api/cart/${encodeURIComponent(itemName)}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          quantity: newQuantity\n        })\n      });\n      if (newQuantity <= 0) {\n        setCart(currentCart => currentCart.filter(item => item.name !== itemName));\n      } else {\n        setCart(currentCart => currentCart.map(item => item.name === itemName ? {\n          ...item,\n          quantity: newQuantity\n        } : item));\n      }\n      triggerCartAnimation();\n    } catch (error) {\n      console.error(\"Error updating cart:\", error);\n    }\n  }, [token, triggerCartAnimation]);\n  const handleOrderFinalized = useCallback(() => {\n    setCart([]);\n  }, []);\n  const cartItemCount = cart.reduce((total, item) => total + item.quantity, 0);\n  const isAuthenticated = !!token;\n  const renderPage = () => {\n    switch (currentPage) {\n      case 'login':\n        return /*#__PURE__*/_jsxDEV(LoginPage, {\n          onNavigate: handleNavigation,\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 16\n        }, this);\n      case 'advertisement':\n        return /*#__PURE__*/_jsxDEV(AdvertisementPlanPage, {\n          onNavigate: handleNavigation,\n          onAddToCart: handleAddToCart,\n          onUpdateCart: handleUpdateCart,\n          cart: cart,\n          cartItemCount: cartItemCount,\n          isCartAnimating: isCartAnimating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 16\n        }, this);\n      case 'checkout':\n        return /*#__PURE__*/_jsxDEV(CheckoutPage, {\n          onNavigate: handleNavigation,\n          cart: cart,\n          onUpdateCart: handleUpdateCart,\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 16\n        }, this);\n      case 'order-success':\n        return /*#__PURE__*/_jsxDEV(OrderSuccessPage, {\n          onNavigate: handleNavigation,\n          token: token,\n          onOrderFinalized: handleOrderFinalized\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 16\n        }, this);\n      case 'order-history':\n        return /*#__PURE__*/_jsxDEV(OrderHistoryPage, {\n          onNavigate: handleNavigation,\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 16\n        }, this);\n      case 'marketplace':\n        return /*#__PURE__*/_jsxDEV(MarketplacePage, {\n          onNavigate: handleNavigation,\n          token: token,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 16\n        }, this);\n      case 'inbox':\n        return /*#__PURE__*/_jsxDEV(InboxPage, {\n          onNavigate: handleNavigation,\n          token: token,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 16\n        }, this);\n      case 'chat':\n        return /*#__PURE__*/_jsxDEV(ChatPage, {\n          onNavigate: handleNavigation,\n          user: user,\n          pageData: pageData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 16\n        }, this);\n      case 'home':\n      default:\n        return /*#__PURE__*/_jsxDEV(HomePage, {\n          onNavigate: handleNavigation,\n          isAuthenticated: isAuthenticated,\n          onLogout: handleLogout,\n          onAddToCart: handleAddToCart,\n          cartItemCount: cartItemCount,\n          isCartAnimating: isCartAnimating,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: GOOGLE_CLIENT_ID,\n    children: renderPage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+D5oBEMaay5RPLr+FS82E3yHnn4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","GoogleOAuthProvider","signInToFirebase","HomePage","LoginPage","AdvertisementPlanPage","CheckoutPage","OrderSuccessPage","OrderHistoryPage","MarketplacePage","InboxPage","ChatPage","jsxDEV","_jsxDEV","GOOGLE_CLIENT_ID","App","_s","currentPage","setCurrentPage","pageData","setPageData","user","setUser","token","setToken","localStorage","getItem","cart","setCart","isCartAnimating","setIsCartAnimating","urlParams","URLSearchParams","window","location","search","get","handleLogout","removeItem","bootstrap","storedToken","decodedToken","JSON","parse","atob","split","exp","Date","now","id","name","firebaseToken","response","fetch","headers","ok","cartData","json","formattedCart","map","item","productName","status","error","console","handleNavigation","page","data","handleLogin","googleUserInfo","timeoutPromise","Promise","_","reject","setTimeout","Error","race","method","body","stringify","googleId","sub","email","setItem","triggerCartAnimation","handleAddToCart","itemsToAdd","updatedCartData","handleUpdateCart","itemName","newQuantity","encodeURIComponent","quantity","currentCart","filter","handleOrderFinalized","cartItemCount","reduce","total","isAuthenticated","renderPage","onNavigate","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onAddToCart","onUpdateCart","onOrderFinalized","onLogout","clientId","children","_c","$RefreshReg$"],"sources":["/Users/prashanthdevarapalli/my-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport { signInToFirebase } from './firebaseConfig';\n\n// Import Page Components\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport AdvertisementPlanPage from './pages/AdvertisementPlanPage';\nimport CheckoutPage from './pages/CheckoutPage';\nimport OrderSuccessPage from './pages/OrderSuccessPage';\nimport OrderHistoryPage from './pages/OrderHistoryPage';\nimport MarketplacePage from './pages/MarketplacePage';\nimport InboxPage from './pages/InboxPage';\nimport ChatPage from './pages/ChatPage';\n\n// --- IMPORTANT: PASTE YOUR KEYS HERE ---\nconst GOOGLE_CLIENT_ID = \"117194583119-ipg9t7ohp034hfapg6h0s3ohja0ajdbj.apps.googleusercontent.com\";\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState('home');\n  const [pageData, setPageData] = useState({});\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [cart, setCart] = useState([]);\n  const [isCartAnimating, setIsCartAnimating] = useState(false);\n\n  // --- EFFECT 1: Handle redirects from Stripe ---\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.get('payment_intent')) {\n        setCurrentPage('order-success');\n    }\n  }, []);\n\n  // --- EFFECT 2: Bootstrap user session on load ---\n  const handleLogout = useCallback(() => {\n    setUser(null);\n    setToken(null);\n    setCart([]);\n    localStorage.removeItem('token');\n    localStorage.removeItem('firebaseToken');\n    setCurrentPage('home'); \n  }, []);\n\n  useEffect(() => {\n    const bootstrap = async () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        try {\n          const decodedToken = JSON.parse(atob(storedToken.split('.')[1]));\n          if (decodedToken.exp * 1000 < Date.now()) {\n            handleLogout();\n            return;\n          }\n          \n          setUser({ id: decodedToken.id, name: decodedToken.name });\n          setToken(storedToken);\n\n          const firebaseToken = localStorage.getItem('firebaseToken');\n          if (firebaseToken) {\n              await signInToFirebase(firebaseToken);\n          }\n\n          const response = await fetch('http://localhost:8000/api/cart', {\n            headers: { 'Authorization': `Bearer ${storedToken}` }\n          });\n          if (response.ok) {\n            const cartData = await response.json();\n            const formattedCart = cartData.map(item => ({ ...item, name: item.productName }));\n            setCart(formattedCart);\n          } else {\n            if(response.status === 401 || response.status === 403) {\n                handleLogout();\n            }\n          }\n        } catch (error) {\n          console.error(\"Failed to initialize app state:\", error);\n          handleLogout();\n        }\n      }\n    };\n    bootstrap();\n  }, [handleLogout]);\n\n  const handleNavigation = useCallback((page, data = {}) => {\n      setPageData(data);\n      setCurrentPage(page);\n  }, []);\n\n  // --- UPDATED LOGIN HANDLER WITH TIMEOUT ---\n  const handleLogin = useCallback(async (googleUserInfo) => {\n    try {\n      // Create a timeout promise\n      const timeoutPromise = new Promise((_, reject) =>\n        setTimeout(() => reject(new Error('Server did not respond in time.')), 15000) // 15 seconds\n      );\n\n      // Race the fetch request against the timeout\n      const response = await Promise.race([\n        fetch('http://localhost:8000/api/auth/google', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              googleId: googleUserInfo.sub,\n              email: googleUserInfo.email,\n              name: googleUserInfo.name,\n            }),\n        }),\n        timeoutPromise\n      ]);\n\n      if (!response.ok) throw new Error('Backend authentication failed');\n      const data = await response.json();\n      \n      localStorage.setItem('token', data.token);\n      localStorage.setItem('firebaseToken', data.firebaseToken);\n\n      setUser(data.user);\n      setToken(data.token);\n      \n      await signInToFirebase(data.firebaseToken);\n\n      setCurrentPage('home');\n    } catch (error) {\n      console.error(\"Error during backend authentication:\", error);\n      // We can pass an error message to the login page in the future if we want.\n      // For now, the loading spinner on the login page will just stop.\n    }\n  }, []);\n\n  const triggerCartAnimation = useCallback(() => {\n    setIsCartAnimating(true);\n    setTimeout(() => setIsCartAnimating(false), 820);\n  }, []);\n\n  const handleAddToCart = useCallback(async (itemsToAdd) => {\n    if (!token) {\n        handleNavigation('login');\n        return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/api/cart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ itemsToAdd }),\n      });\n      if (!response.ok) throw new Error('Failed to add to cart');\n      const updatedCartData = await response.json();\n      const formattedCart = updatedCartData.map(item => ({ ...item, name: item.productName }));\n      setCart(formattedCart);\n      triggerCartAnimation();\n    } catch (error) {\n      console.error(\"Error adding to cart:\", error);\n    }\n  }, [token, handleNavigation, triggerCartAnimation]);\n  \n  const handleUpdateCart = useCallback(async (itemName, newQuantity) => {\n    if (!token) return;\n    try {\n      await fetch(`http://localhost:8000/api/cart/${encodeURIComponent(itemName)}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ quantity: newQuantity }),\n      });\n      if (newQuantity <= 0) {\n          setCart(currentCart => currentCart.filter(item => item.name !== itemName));\n      } else {\n          setCart(currentCart => currentCart.map(item => item.name === itemName ? { ...item, quantity: newQuantity } : item));\n      }\n      triggerCartAnimation();\n    } catch (error) {\n        console.error(\"Error updating cart:\", error);\n    }\n  }, [token, triggerCartAnimation]);\n  \n  const handleOrderFinalized = useCallback(() => {\n      setCart([]);\n  }, []);\n\n  const cartItemCount = cart.reduce((total, item) => total + item.quantity, 0);\n  const isAuthenticated = !!token;\n\n  const renderPage = () => {\n    switch (currentPage) {\n      case 'login':\n        return <LoginPage onNavigate={handleNavigation} onLogin={handleLogin} />;\n      case 'advertisement':\n        return <AdvertisementPlanPage onNavigate={handleNavigation} onAddToCart={handleAddToCart} onUpdateCart={handleUpdateCart} cart={cart} cartItemCount={cartItemCount} isCartAnimating={isCartAnimating} />;\n      case 'checkout':\n        return <CheckoutPage onNavigate={handleNavigation} cart={cart} onUpdateCart={handleUpdateCart} token={token} />;\n      case 'order-success':\n        return <OrderSuccessPage onNavigate={handleNavigation} token={token} onOrderFinalized={handleOrderFinalized} />;\n      case 'order-history':\n        return <OrderHistoryPage onNavigate={handleNavigation} token={token} />;\n      case 'marketplace':\n        return <MarketplacePage onNavigate={handleNavigation} token={token} user={user} />;\n      case 'inbox':\n        return <InboxPage onNavigate={handleNavigation} token={token} user={user} />;\n      case 'chat':\n        return <ChatPage onNavigate={handleNavigation} user={user} pageData={pageData} />;\n      case 'home':\n      default:\n        return <HomePage onNavigate={handleNavigation} isAuthenticated={isAuthenticated} onLogout={handleLogout} onAddToCart={handleAddToCart} cartItemCount={cartItemCount} isCartAnimating={isCartAnimating} user={user} />;\n    }\n  };\n\n  return (\n    <GoogleOAuthProvider clientId={GOOGLE_CLIENT_ID}>\n      {renderPage()}\n    </GoogleOAuthProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}